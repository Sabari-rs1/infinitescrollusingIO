{"ast":null,"code":"var _jsxFileName = \"C:\\\\newapp\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\n\nvar randomWords = require('random-words');\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n    this.state = {\n      url: []\n    };\n    this.observer = null;\n  }\n\n  componentDidMount() {\n    this.observer = new IntersectionObserver(([e]) => {\n      if (e.intersectionRatio > 0) {\n        this.getNewImage();\n      }\n    }, {\n      threshold: 1\n    });\n    this.observer.observe(this.ref.current);\n  }\n\n  getNewImage() {\n    let keyword = randomWords();\n    let newurl = \"https://api.giphy.com/v1/gifs/search?api_key=bAK3lUZJd4RlBw8fyq6Cq8WYEmMiZAlp&limit=1&q=\";\n    newurl = newurl.concat(keyword);\n    fetch(newurl).then(res => res.json()).then(content => {\n      let newimgurl = content.data[0].images.downsized.url;\n      const arr = [...this.state.url, newimgurl];\n      this.setState({\n        url: arr\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Infinite Scroll using IO\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, this.state.url.map((url, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        newref: input => {\n          this.divitem = input;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: url,\n        style: {\n          height: \"800px\",\n          width: \"100%\"\n        },\n        alt: \"img not loaded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"footer\", {\n      ref: this.ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Loading\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/newapp/src/App.jsx"],"names":["React","Component","randomWords","require","App","constructor","ref","createRef","state","url","observer","componentDidMount","IntersectionObserver","e","intersectionRatio","getNewImage","threshold","observe","current","keyword","newurl","concat","fetch","then","res","json","content","newimgurl","data","images","downsized","arr","setState","render","map","index","input","divitem","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACvBI,EAAAA,WAAW,GACX;AACI;AADJ,SASAC,GATA,GASMN,KAAK,CAACO,SAAN,EATN;AAEI,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAG;AADG,KAAb;AAGA,SAAKC,QAAL,GAAgB,IAAhB;AAEH;;AAKDC,EAAAA,iBAAiB,GACjB;AACI,SAAKD,QAAL,GAAgB,IAAIE,oBAAJ,CAAyB,CAAC,CAACC,CAAD,CAAD,KAAQ;AAEjD,UAAIA,CAAC,CAACC,iBAAF,GAAoB,CAAxB,EACA;AACI,aAAKC,WAAL;AACH;AAAC,KALc,EAMhB;AACIC,MAAAA,SAAS,EAAG;AADhB,KANgB,CAAhB;AASA,SAAKN,QAAL,CAAcO,OAAd,CAAsB,KAAKX,GAAL,CAASY,OAA/B;AACH;;AAGDH,EAAAA,WAAW,GACX;AACA,QAAII,OAAO,GAACjB,WAAW,EAAvB;AACA,QAAIkB,MAAM,GAAC,0FAAX;AACAA,IAAAA,MAAM,GAACA,MAAM,CAACC,MAAP,CAAcF,OAAd,CAAP;AACAG,IAAAA,KAAK,CAACF,MAAD,CAAL,CAAcG,IAAd,CAAmBC,GAAG,IAAGA,GAAG,CAACC,IAAJ,EAAzB,EAAqCF,IAArC,CAA0CG,OAAO,IACjD;AACA,UAAIC,SAAS,GAAED,OAAO,CAACE,IAAR,CAAa,CAAb,EAAgBC,MAAhB,CAAuBC,SAAvB,CAAiCrB,GAAhD;AACA,YAAMsB,GAAG,GAAG,CAAC,GAAG,KAAKvB,KAAL,CAAWC,GAAf,EAAmBkB,SAAnB,CAAZ;AACA,WAAKK,QAAL,CAAc;AAACvB,QAAAA,GAAG,EAAGsB;AAAP,OAAd;AACC,KALD;AAMC;;AAGDE,EAAAA,MAAM,GACN;AACI,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKzB,KAAL,CAAWC,GAAX,CAAeyB,GAAf,CAAmB,CAACzB,GAAD,EAAK0B,KAAL,KACnB;AACA,0BAAQ;AAAK,QAAA,GAAG,EAAGA,KAAX;AAAmB,QAAA,MAAM,EAAGC,KAAD,IAAS;AAAC,eAAKC,OAAL,GAAaD,KAAb;AAAmB,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ;AAAK,QAAA,GAAG,EAAK3B,GAAb;AAAoB,QAAA,KAAK,EAAE;AAAC6B,UAAAA,MAAM,EAAC,OAAR;AAAgBC,UAAAA,KAAK,EAAC;AAAtB,SAA3B;AAA2D,QAAA,GAAG,EAAG,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAR;AAGC,KALD,CAFJ,CAJA,eAeA;AAAQ,MAAA,GAAG,EAAE,KAAKjC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfA,CADJ;AAqBH;;AAlEsB;;AAsE3B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react'\nvar randomWords = require('random-words');\n\nclass App extends Component{\n    constructor()\n    {\n        super();\n        this.state = {\n            url : []\n        }\n        this.observer = null;\n        \n    }\n    \n    ref = React.createRef();\n   \n\n    componentDidMount()\n    {\n        this.observer = new IntersectionObserver(([e]) =>{\n        \n        if (e.intersectionRatio>0)\n        {\n            this.getNewImage();     \n        }},\n        {\n            threshold : 1\n        });\n        this.observer.observe(this.ref.current) ;\n    }\n\n\n    getNewImage()\n    {\n    let keyword=randomWords();\n    let newurl=\"https://api.giphy.com/v1/gifs/search?api_key=bAK3lUZJd4RlBw8fyq6Cq8WYEmMiZAlp&limit=1&q=\";\n    newurl=newurl.concat(keyword);\n    fetch(newurl).then(res=> res.json()).then(content=>\n    {\n    let newimgurl= content.data[0].images.downsized.url;\n    const arr = [...this.state.url,newimgurl]\n    this.setState({url : arr});  \n    }); \n    }\n\n\n    render()\n    {\n        return (\n            <div>\n            <h1>\n                Infinite Scroll using IO\n            </h1>\n            <div>\n             {\n                this.state.url.map((url,index) =>\n                {\n                return (<div key={ index } newref={(input)=>{this.divitem=input}}>\n                    <img src = { url }  style={{height:\"800px\",width:\"100%\" }} alt = \"img not loaded\"/>\n                </div>)\n                }\n                )\n            }\n            </div>\n            <footer ref={this.ref}>\n                Loading\n            </footer>\n            </div>\n        )\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}